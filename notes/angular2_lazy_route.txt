异步路由

当程序的路由越来越长，程序的体积也越来越大，你会发现，每次重新加载时，花费的时间也就越多
这时候我们就要考虑如何部分加载，或者说等到用户真正需要时才加载。

官方给出的例子
{
    path: 'admin',
    loadChildren: 'app/admin/admin.module#AdminModule',
},
使用loadChildren代替Children
其中loadChildren的值为admin.module所在的位置，后面紧跟# + 模块导出的名字

当路由导航到admin时，会动态导入AdminModule，然后导入到路由表中。就可以像原来一样正常访问了。
异步路由只有在初次访问时才会加载，后续就可以像平常那样正常使用了。

最后就要把根模块中的导入AdminModule语句删除，并且根模块的imports中也不再需要导入AdminModule了
所有的上述功能都由loadChildren: 'app/admin/admin.module#AdminModule'代替了。

预加载

预加载介于异步加载和同步加载之间，应用场景是：appModule是必须要加载的，并且在程序一启动就立即加载。
另一些模块是按需加载的，只有用户访问才加载。但是还有这样一种状态，用户在appModule加载之后，肯定会访问某一个功能
这个功能应该在根模块之后立即加载，在用户访问时已经加载好了，却又不影响初始模块的加载。

这样的状态就是预加载

预加载策略

目前有两种加载方式：
    1、完全不预加载，这是默认的
    2、制定预加载策略，按照预加载策略加载。

